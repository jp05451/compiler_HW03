Terminals unused in grammar

   CHAR
   DEFAULT
   DO


State 24 conflicts: 1 shift/reduce
State 41 conflicts: 1 shift/reduce
State 60 conflicts: 1 shift/reduce
State 61 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 108 conflicts: 1 reduce/reduce
State 111 conflicts: 21 reduce/reduce
State 157 conflicts: 1 shift/reduce
State 186 conflicts: 1 shift/reduce
State 198 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declarations statments

    2 declarations: declarations declaration
    3             | %empty

    4 statments: statments statment
    5          | %empty

    6 declaration: constant
    7            | variable
    8            | array
    9            | function
   10            | procedure

   11 constant: CONST ID ':' Type ASSIGN expressions
   12         | CONST ID ASSIGN expressions

   13 variable: VAR ID ':' Type
   14         | VAR ID ASSIGN const_exp
   15         | VAR ID ':' Type ASSIGN const_exp

   16 Types: Type
   17      | array

   18 array: VAR ID ':' ARRAY const_exp '.' '.' const_exp OF Type

   19 Type: BOOL
   20     | INT
   21     | REAL
   22     | STRING

   23 $@1: %empty

   24 function: FUNCTION ID '(' ')' ':' Types $@1 contents END ID

   25 $@2: %empty

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types $@2 contents END ID

   27 functionVarA: ID ':' Type
   28             | ID ':' ARRAY const_exp '.' '.' const_exp OF Type

   29 functionVarB: functionVarB ',' ID ':' Type
   30             | functionVarB ',' ID ':' ARRAY const_exp '.' '.' const_exp OF Type
   31             | %empty

   32 $@3: %empty

   33 procedure: PROCEDURE ID '(' ')' $@3 contents END ID

   34 $@4: %empty

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' $@4 contents END ID

   36 contents: contents content
   37         | %empty

   38 content: variable
   39        | constant
   40        | array
   41        | statment

   42 statment: block
   43         | simple
   44         | expressions
   45         | conditional
   46         | loop

   47 $@5: %empty

   48 block: BEG $@5 content END

   49 simple: ID ASSIGN expressions
   50       | PUT expressions
   51       | GET expressions
   52       | RESULT expressions
   53       | RETURN
   54       | EXIT
   55       | EXIT WHEN bool_expression
   56       | SKIP

   57 expressions: '-' expressions
   58            | '(' expressions ')'
   59            | expressions '*' expressions
   60            | expressions '/' expressions
   61            | expressions MOD expressions
   62            | expressions '+' expressions
   63            | expressions '-' expressions
   64            | bool_expression
   65            | const_exp
   66            | function_invocation
   67            | ID '[' INT ']'
   68            | ID

   69 const_exp: INT_NUMBER
   70          | REAL_NUMBER
   71          | STR
   72          | TRUE
   73          | FALSE

   74 bool_expression: '(' bool_expression ')'
   75                | expressions '<' expressions
   76                | expressions LESS_EQUAL expressions
   77                | expressions '=' expressions
   78                | expressions MORE_EQUAL expressions
   79                | expressions '>' expressions
   80                | expressions NOT_EQUAL expressions
   81                | NOT expressions
   82                | expressions AND expressions
   83                | expressions OR expressions

   84 function_invocation: ID '(' ')'
   85                    | ID '(' functionInputA functionInputB ')'

   86 functionInputA: expressions

   87 functionInputB: functionInputB ',' expressions
   88               | %empty

   89 $@6: %empty

   90 conditional: IF bool_expression THEN $@6 contents ELSE content END IF

   91 $@7: %empty

   92 conditional: IF bool_expression THEN $@7 contents END IF

   93 $@8: %empty

   94 loop: LOOP $@8 contents END LOOP

   95 $@9: %empty

   96 loop: FOR ID ':' expressions '.' '.' expressions $@9 contents END FOR

   97 $@10: %empty

   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions $@10 contents END FOR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24 26 33 35 58 74 84 85
')' (41) 24 26 33 35 58 74 84 85
'*' (42) 59
'+' (43) 62
',' (44) 29 30 87
'-' (45) 57 63
'.' (46) 18 28 30 96 98
'/' (47) 60
':' (58) 11 13 15 18 24 26 27 28 29 30 96 98
'<' (60) 75
'=' (61) 77
'>' (62) 79
'[' (91) 67
']' (93) 67
error (256)
REAL (258) 21
INT (259) 20 67
STRING (260) 22
BOOL (261) 19
TRUE (262) 72
FALSE (263) 73
INT_NUMBER (264) 69
REAL_NUMBER (265) 70
STR (266) 71
ID (267) 11 12 13 14 15 18 24 26 27 28 29 30 33 35 49 67 68 84 85 96
    98
ARRAY (268) 18 28 30
BEG (269) 48
CHAR (270)
DECREASING (271) 98
DEFAULT (272)
DO (273)
ELSE (274) 90
END (275) 24 26 33 35 48 90 92 94 96 98
EXIT (276) 54 55
FOR (277) 96 98
FUNCTION (278) 24 26
GET (279) 51
IF (280) 90 92
LOOP (281) 94
OF (282) 18 28 30
PUT (283) 50
PROCEDURE (284) 33 35
RESULT (285) 52
RETURN (286) 53
SKIP (287) 56
THEN (288) 90 92
VAR (289) 13 14 15 18
WHEN (290) 55
CONST (291) 11 12
ASSIGN (292) 11 12 14 15 49
MOD (293) 61
LESS_EQUAL (294) 76
MORE_EQUAL (295) 78
NOT_EQUAL (296) 80
AND (297) 82
OR (298) 83
NOT (299) 81
NEGATIVE (300)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
declarations (62)
    on left: 2 3, on right: 1 2
statments (63)
    on left: 4 5, on right: 1 4
declaration (64)
    on left: 6 7 8 9 10, on right: 2
constant (65)
    on left: 11 12, on right: 6 39
variable (66)
    on left: 13 14 15, on right: 7 38
Types (67)
    on left: 16 17, on right: 24 26
array (68)
    on left: 18, on right: 8 17 40
Type (69)
    on left: 19 20 21 22, on right: 11 13 15 16 18 27 28 29 30
function (70)
    on left: 24 26, on right: 9
$@1 (71)
    on left: 23, on right: 24
$@2 (72)
    on left: 25, on right: 26
functionVarA (73)
    on left: 27 28, on right: 26 35
functionVarB (74)
    on left: 29 30 31, on right: 26 29 30 35
procedure (75)
    on left: 33 35, on right: 10
$@3 (76)
    on left: 32, on right: 33
$@4 (77)
    on left: 34, on right: 35
contents (78)
    on left: 36 37, on right: 24 26 33 35 36 90 92 94 96 98
content (79)
    on left: 38 39 40 41, on right: 36 48 90
statment (80)
    on left: 42 43 44 45 46, on right: 4 41
block (81)
    on left: 48, on right: 42
$@5 (82)
    on left: 47, on right: 48
simple (83)
    on left: 49 50 51 52 53 54 55 56, on right: 43
expressions (84)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68, on right: 11 12 44
    49 50 51 52 57 58 59 60 61 62 63 75 76 77 78 79 80 81 82 83 86
    87 96 98
const_exp (85)
    on left: 69 70 71 72 73, on right: 14 15 18 28 30 65
bool_expression (86)
    on left: 74 75 76 77 78 79 80 81 82 83, on right: 55 64 74 90 92
function_invocation (87)
    on left: 84 85, on right: 66
functionInputA (88)
    on left: 86, on right: 85
functionInputB (89)
    on left: 87 88, on right: 85 87
conditional (90)
    on left: 90 92, on right: 45
$@6 (91)
    on left: 89, on right: 90
$@7 (92)
    on left: 91, on right: 92
loop (93)
    on left: 94 96 98, on right: 46
$@8 (94)
    on left: 93, on right: 94
$@9 (95)
    on left: 95, on right: 96
$@10 (96)
    on left: 97, on right: 98


State 0

    0 $accept: . program $end

    $default  reduce using rule 3 (declarations)

    program       go to state 1
    declarations  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: declarations . statments
    2 declarations: declarations . declaration

    FUNCTION   shift, and go to state 4
    PROCEDURE  shift, and go to state 5
    VAR        shift, and go to state 6
    CONST      shift, and go to state 7

    $default  reduce using rule 5 (statments)

    statments    go to state 8
    declaration  go to state 9
    constant     go to state 10
    variable     go to state 11
    array        go to state 12
    function     go to state 13
    procedure    go to state 14


State 3

    0 $accept: program $end .

    $default  accept


State 4

   24 function: FUNCTION . ID '(' ')' ':' Types $@1 contents END ID
   26         | FUNCTION . ID '(' functionVarA functionVarB ')' ':' Types $@2 contents END ID

    ID  shift, and go to state 15


State 5

   33 procedure: PROCEDURE . ID '(' ')' $@3 contents END ID
   35          | PROCEDURE . ID '(' functionVarA functionVarB ')' $@4 contents END ID

    ID  shift, and go to state 16


State 6

   13 variable: VAR . ID ':' Type
   14         | VAR . ID ASSIGN const_exp
   15         | VAR . ID ':' Type ASSIGN const_exp
   18 array: VAR . ID ':' ARRAY const_exp '.' '.' const_exp OF Type

    ID  shift, and go to state 17


State 7

   11 constant: CONST . ID ':' Type ASSIGN expressions
   12         | CONST . ID ASSIGN expressions

    ID  shift, and go to state 18


State 8

    1 program: declarations statments .
    4 statments: statments . statment

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    $default  reduce using rule 1 (program)

    statment             go to state 38
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 9

    2 declarations: declarations declaration .

    $default  reduce using rule 2 (declarations)


State 10

    6 declaration: constant .

    $default  reduce using rule 6 (declaration)


State 11

    7 declaration: variable .

    $default  reduce using rule 7 (declaration)


State 12

    8 declaration: array .

    $default  reduce using rule 8 (declaration)


State 13

    9 declaration: function .

    $default  reduce using rule 9 (declaration)


State 14

   10 declaration: procedure .

    $default  reduce using rule 10 (declaration)


State 15

   24 function: FUNCTION ID . '(' ')' ':' Types $@1 contents END ID
   26         | FUNCTION ID . '(' functionVarA functionVarB ')' ':' Types $@2 contents END ID

    '('  shift, and go to state 47


State 16

   33 procedure: PROCEDURE ID . '(' ')' $@3 contents END ID
   35          | PROCEDURE ID . '(' functionVarA functionVarB ')' $@4 contents END ID

    '('  shift, and go to state 48


State 17

   13 variable: VAR ID . ':' Type
   14         | VAR ID . ASSIGN const_exp
   15         | VAR ID . ':' Type ASSIGN const_exp
   18 array: VAR ID . ':' ARRAY const_exp '.' '.' const_exp OF Type

    ASSIGN  shift, and go to state 49
    ':'     shift, and go to state 50


State 18

   11 constant: CONST ID . ':' Type ASSIGN expressions
   12         | CONST ID . ASSIGN expressions

    ASSIGN  shift, and go to state 51
    ':'     shift, and go to state 52


State 19

   72 const_exp: TRUE .

    $default  reduce using rule 72 (const_exp)


State 20

   73 const_exp: FALSE .

    $default  reduce using rule 73 (const_exp)


State 21

   69 const_exp: INT_NUMBER .

    $default  reduce using rule 69 (const_exp)


State 22

   70 const_exp: REAL_NUMBER .

    $default  reduce using rule 70 (const_exp)


State 23

   71 const_exp: STR .

    $default  reduce using rule 71 (const_exp)


State 24

   49 simple: ID . ASSIGN expressions
   67 expressions: ID . '[' INT ']'
   68            | ID .
   84 function_invocation: ID . '(' ')'
   85                    | ID . '(' functionInputA functionInputB ')'

    ASSIGN  shift, and go to state 53
    '('     shift, and go to state 54
    '['     shift, and go to state 55

    '('       [reduce using rule 68 (expressions)]
    $default  reduce using rule 68 (expressions)


State 25

   48 block: BEG . $@5 content END

    $default  reduce using rule 47 ($@5)

    $@5  go to state 56


State 26

   54 simple: EXIT .
   55       | EXIT . WHEN bool_expression

    WHEN  shift, and go to state 57

    $default  reduce using rule 54 (simple)


State 27

   96 loop: FOR . ID ':' expressions '.' '.' expressions $@9 contents END FOR
   98     | FOR . DECREASING ID ':' expressions '.' '.' expressions $@10 contents END FOR

    ID          shift, and go to state 58
    DECREASING  shift, and go to state 59


State 28

   51 simple: GET . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 61
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 29

   90 conditional: IF . bool_expression THEN $@6 contents ELSE content END IF
   92            | IF . bool_expression THEN $@7 contents END IF

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 62
    const_exp            go to state 42
    bool_expression      go to state 63
    function_invocation  go to state 44


State 30

   94 loop: LOOP . $@8 contents END LOOP

    $default  reduce using rule 93 ($@8)

    $@8  go to state 64


State 31

   50 simple: PUT . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 65
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 32

   52 simple: RESULT . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 66
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 33

   53 simple: RETURN .

    $default  reduce using rule 53 (simple)


State 34

   56 simple: SKIP .

    $default  reduce using rule 56 (simple)


State 35

   81 bool_expression: NOT . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 67
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 36

   57 expressions: '-' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 68
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 37

   58 expressions: '(' . expressions ')'
   74 bool_expression: '(' . bool_expression ')'

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 69
    const_exp            go to state 42
    bool_expression      go to state 70
    function_invocation  go to state 44


State 38

    4 statments: statments statment .

    $default  reduce using rule 4 (statments)


State 39

   42 statment: block .

    $default  reduce using rule 42 (statment)


State 40

   43 statment: simple .

    $default  reduce using rule 43 (statment)


State 41

   44 statment: expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 44 (statment)]
    $default  reduce using rule 44 (statment)


State 42

   65 expressions: const_exp .

    $default  reduce using rule 65 (expressions)


State 43

   64 expressions: bool_expression .

    $default  reduce using rule 64 (expressions)


State 44

   66 expressions: function_invocation .

    $default  reduce using rule 66 (expressions)


State 45

   45 statment: conditional .

    $default  reduce using rule 45 (statment)


State 46

   46 statment: loop .

    $default  reduce using rule 46 (statment)


State 47

   24 function: FUNCTION ID '(' . ')' ':' Types $@1 contents END ID
   26         | FUNCTION ID '(' . functionVarA functionVarB ')' ':' Types $@2 contents END ID

    ID   shift, and go to state 84
    ')'  shift, and go to state 85

    functionVarA  go to state 86


State 48

   33 procedure: PROCEDURE ID '(' . ')' $@3 contents END ID
   35          | PROCEDURE ID '(' . functionVarA functionVarB ')' $@4 contents END ID

    ID   shift, and go to state 84
    ')'  shift, and go to state 87

    functionVarA  go to state 88


State 49

   14 variable: VAR ID ASSIGN . const_exp

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 89


State 50

   13 variable: VAR ID ':' . Type
   15         | VAR ID ':' . Type ASSIGN const_exp
   18 array: VAR ID ':' . ARRAY const_exp '.' '.' const_exp OF Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93
    ARRAY   shift, and go to state 94

    Type  go to state 95


State 51

   12 constant: CONST ID ASSIGN . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 96
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 52

   11 constant: CONST ID ':' . Type ASSIGN expressions

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93

    Type  go to state 97


State 53

   49 simple: ID ASSIGN . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 98
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 54

   84 function_invocation: ID '(' . ')'
   85                    | ID '(' . functionInputA functionInputB ')'

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37
    ')'          shift, and go to state 99

    expressions          go to state 100
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    functionInputA       go to state 101


State 55

   67 expressions: ID '[' . INT ']'

    INT  shift, and go to state 102


State 56

   48 block: BEG $@5 . content END

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 106
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 57

   55 simple: EXIT WHEN . bool_expression

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 62
    const_exp            go to state 42
    bool_expression      go to state 108
    function_invocation  go to state 44


State 58

   96 loop: FOR ID . ':' expressions '.' '.' expressions $@9 contents END FOR

    ':'  shift, and go to state 109


State 59

   98 loop: FOR DECREASING . ID ':' expressions '.' '.' expressions $@10 contents END FOR

    ID  shift, and go to state 110


State 60

   67 expressions: ID . '[' INT ']'
   68            | ID .
   84 function_invocation: ID . '(' ')'
   85                    | ID . '(' functionInputA functionInputB ')'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    '('       [reduce using rule 68 (expressions)]
    $default  reduce using rule 68 (expressions)


State 61

   51 simple: GET expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 51 (simple)]
    $default  reduce using rule 51 (simple)


State 62

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83


State 63

   64 expressions: bool_expression .
   90 conditional: IF bool_expression . THEN $@6 contents ELSE content END IF
   92            | IF bool_expression . THEN $@7 contents END IF

    THEN  shift, and go to state 111

    $default  reduce using rule 64 (expressions)


State 64

   94 loop: LOOP $@8 . contents END LOOP

    $default  reduce using rule 37 (contents)

    contents  go to state 112


State 65

   50 simple: PUT expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 50 (simple)]
    $default  reduce using rule 50 (simple)


State 66

   52 simple: RESULT expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 52 (simple)]
    $default  reduce using rule 52 (simple)


State 67

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   81                | NOT expressions .
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    $default  reduce using rule 81 (bool_expression)


State 68

   57 expressions: '-' expressions .
   59            | expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    $default  reduce using rule 57 (expressions)


State 69

   58 expressions: '(' expressions . ')'
   59            | expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83
    ')'         shift, and go to state 113


State 70

   64 expressions: bool_expression .
   74 bool_expression: '(' bool_expression . ')'

    ')'  shift, and go to state 114

    ')'       [reduce using rule 64 (expressions)]
    $default  reduce using rule 64 (expressions)


State 71

   61 expressions: expressions MOD . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 115
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 72

   76 bool_expression: expressions LESS_EQUAL . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 116
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 73

   78 bool_expression: expressions MORE_EQUAL . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 117
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 74

   80 bool_expression: expressions NOT_EQUAL . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 118
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 75

   82 bool_expression: expressions AND . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 119
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 76

   83 bool_expression: expressions OR . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 120
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 77

   75 bool_expression: expressions '<' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 121
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 78

   77 bool_expression: expressions '=' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 122
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 79

   79 bool_expression: expressions '>' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 123
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 80

   62 expressions: expressions '+' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 124
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 81

   63 expressions: expressions '-' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 125
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 82

   59 expressions: expressions '*' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 126
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 83

   60 expressions: expressions '/' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 127
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 84

   27 functionVarA: ID . ':' Type
   28             | ID . ':' ARRAY const_exp '.' '.' const_exp OF Type

    ':'  shift, and go to state 128


State 85

   24 function: FUNCTION ID '(' ')' . ':' Types $@1 contents END ID

    ':'  shift, and go to state 129


State 86

   26 function: FUNCTION ID '(' functionVarA . functionVarB ')' ':' Types $@2 contents END ID

    $default  reduce using rule 31 (functionVarB)

    functionVarB  go to state 130


State 87

   33 procedure: PROCEDURE ID '(' ')' . $@3 contents END ID

    $default  reduce using rule 32 ($@3)

    $@3  go to state 131


State 88

   35 procedure: PROCEDURE ID '(' functionVarA . functionVarB ')' $@4 contents END ID

    $default  reduce using rule 31 (functionVarB)

    functionVarB  go to state 132


State 89

   14 variable: VAR ID ASSIGN const_exp .

    $default  reduce using rule 14 (variable)


State 90

   21 Type: REAL .

    $default  reduce using rule 21 (Type)


State 91

   20 Type: INT .

    $default  reduce using rule 20 (Type)


State 92

   22 Type: STRING .

    $default  reduce using rule 22 (Type)


State 93

   19 Type: BOOL .

    $default  reduce using rule 19 (Type)


State 94

   18 array: VAR ID ':' ARRAY . const_exp '.' '.' const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 133


State 95

   13 variable: VAR ID ':' Type .
   15         | VAR ID ':' Type . ASSIGN const_exp

    ASSIGN  shift, and go to state 134

    $default  reduce using rule 13 (variable)


State 96

   12 constant: CONST ID ASSIGN expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 12 (constant)]
    $default  reduce using rule 12 (constant)


State 97

   11 constant: CONST ID ':' Type . ASSIGN expressions

    ASSIGN  shift, and go to state 135


State 98

   49 simple: ID ASSIGN expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 49 (simple)]
    $default  reduce using rule 49 (simple)


State 99

   84 function_invocation: ID '(' ')' .

    $default  reduce using rule 84 (function_invocation)


State 100

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   86 functionInputA: expressions .

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    $default  reduce using rule 86 (functionInputA)


State 101

   85 function_invocation: ID '(' functionInputA . functionInputB ')'

    $default  reduce using rule 88 (functionInputB)

    functionInputB  go to state 136


State 102

   67 expressions: ID '[' INT . ']'

    ']'  shift, and go to state 137


State 103

   39 content: constant .

    $default  reduce using rule 39 (content)


State 104

   38 content: variable .

    $default  reduce using rule 38 (content)


State 105

   40 content: array .

    $default  reduce using rule 40 (content)


State 106

   48 block: BEG $@5 content . END

    END  shift, and go to state 138


State 107

   41 content: statment .

    $default  reduce using rule 41 (content)


State 108

   55 simple: EXIT WHEN bool_expression .
   64 expressions: bool_expression .

    MOD         reduce using rule 64 (expressions)
    LESS_EQUAL  reduce using rule 64 (expressions)
    MORE_EQUAL  reduce using rule 64 (expressions)
    NOT_EQUAL   reduce using rule 64 (expressions)
    AND         reduce using rule 64 (expressions)
    OR          reduce using rule 64 (expressions)
    '<'         reduce using rule 64 (expressions)
    '='         reduce using rule 64 (expressions)
    '>'         reduce using rule 64 (expressions)
    '+'         reduce using rule 64 (expressions)
    '-'         reduce using rule 55 (simple)
    '-'         [reduce using rule 64 (expressions)]
    '*'         reduce using rule 64 (expressions)
    '/'         reduce using rule 64 (expressions)
    $default    reduce using rule 55 (simple)


State 109

   96 loop: FOR ID ':' . expressions '.' '.' expressions $@9 contents END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 139
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 110

   98 loop: FOR DECREASING ID . ':' expressions '.' '.' expressions $@10 contents END FOR

    ':'  shift, and go to state 140


State 111

   90 conditional: IF bool_expression THEN . $@6 contents ELSE content END IF
   92            | IF bool_expression THEN . $@7 contents END IF

    TRUE         reduce using rule 89 ($@6)
    TRUE         [reduce using rule 91 ($@7)]
    FALSE        reduce using rule 89 ($@6)
    FALSE        [reduce using rule 91 ($@7)]
    INT_NUMBER   reduce using rule 89 ($@6)
    INT_NUMBER   [reduce using rule 91 ($@7)]
    REAL_NUMBER  reduce using rule 89 ($@6)
    REAL_NUMBER  [reduce using rule 91 ($@7)]
    STR          reduce using rule 89 ($@6)
    STR          [reduce using rule 91 ($@7)]
    ID           reduce using rule 89 ($@6)
    ID           [reduce using rule 91 ($@7)]
    BEG          reduce using rule 89 ($@6)
    BEG          [reduce using rule 91 ($@7)]
    END          reduce using rule 91 ($@7)
    EXIT         reduce using rule 89 ($@6)
    EXIT         [reduce using rule 91 ($@7)]
    FOR          reduce using rule 89 ($@6)
    FOR          [reduce using rule 91 ($@7)]
    GET          reduce using rule 89 ($@6)
    GET          [reduce using rule 91 ($@7)]
    IF           reduce using rule 89 ($@6)
    IF           [reduce using rule 91 ($@7)]
    LOOP         reduce using rule 89 ($@6)
    LOOP         [reduce using rule 91 ($@7)]
    PUT          reduce using rule 89 ($@6)
    PUT          [reduce using rule 91 ($@7)]
    RESULT       reduce using rule 89 ($@6)
    RESULT       [reduce using rule 91 ($@7)]
    RETURN       reduce using rule 89 ($@6)
    RETURN       [reduce using rule 91 ($@7)]
    SKIP         reduce using rule 89 ($@6)
    SKIP         [reduce using rule 91 ($@7)]
    VAR          reduce using rule 89 ($@6)
    VAR          [reduce using rule 91 ($@7)]
    CONST        reduce using rule 89 ($@6)
    CONST        [reduce using rule 91 ($@7)]
    NOT          reduce using rule 89 ($@6)
    NOT          [reduce using rule 91 ($@7)]
    '-'          reduce using rule 89 ($@6)
    '-'          [reduce using rule 91 ($@7)]
    '('          reduce using rule 89 ($@6)
    '('          [reduce using rule 91 ($@7)]
    $default     reduce using rule 89 ($@6)

    $@6  go to state 141
    $@7  go to state 142


State 112

   36 contents: contents . content
   94 loop: LOOP $@8 contents . END LOOP

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 143
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 113

   58 expressions: '(' expressions ')' .

    $default  reduce using rule 58 (expressions)


State 114

   74 bool_expression: '(' bool_expression ')' .

    $default  reduce using rule 74 (bool_expression)


State 115

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   61            | expressions MOD expressions .
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    $default  reduce using rule 61 (expressions)


State 116

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   76                | expressions LESS_EQUAL expressions .
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 76 (bool_expression)


State 117

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   78                | expressions MORE_EQUAL expressions .
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 78 (bool_expression)


State 118

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   80                | expressions NOT_EQUAL expressions .
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 80 (bool_expression)


State 119

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   82                | expressions AND expressions .
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    $default  reduce using rule 82 (bool_expression)


State 120

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   83                | expressions OR expressions .

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    $default  reduce using rule 83 (bool_expression)


State 121

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   75                | expressions '<' expressions .
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 75 (bool_expression)


State 122

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   77                | expressions '=' expressions .
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 77 (bool_expression)


State 123

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   79                | expressions '>' expressions .
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '+'  shift, and go to state 80
    '-'  shift, and go to state 81
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 79 (bool_expression)


State 124

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   62            | expressions '+' expressions .
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 62 (expressions)


State 125

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   63            | expressions '-' expressions .
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD  shift, and go to state 71
    '*'  shift, and go to state 82
    '/'  shift, and go to state 83

    $default  reduce using rule 63 (expressions)


State 126

   59 expressions: expressions . '*' expressions
   59            | expressions '*' expressions .
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    $default  reduce using rule 59 (expressions)


State 127

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   60            | expressions '/' expressions .
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    $default  reduce using rule 60 (expressions)


State 128

   27 functionVarA: ID ':' . Type
   28             | ID ':' . ARRAY const_exp '.' '.' const_exp OF Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93
    ARRAY   shift, and go to state 145

    Type  go to state 146


State 129

   24 function: FUNCTION ID '(' ')' ':' . Types $@1 contents END ID

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93
    VAR     shift, and go to state 147

    Types  go to state 148
    array  go to state 149
    Type   go to state 150


State 130

   26 function: FUNCTION ID '(' functionVarA functionVarB . ')' ':' Types $@2 contents END ID
   29 functionVarB: functionVarB . ',' ID ':' Type
   30             | functionVarB . ',' ID ':' ARRAY const_exp '.' '.' const_exp OF Type

    ')'  shift, and go to state 151
    ','  shift, and go to state 152


State 131

   33 procedure: PROCEDURE ID '(' ')' $@3 . contents END ID

    $default  reduce using rule 37 (contents)

    contents  go to state 153


State 132

   29 functionVarB: functionVarB . ',' ID ':' Type
   30             | functionVarB . ',' ID ':' ARRAY const_exp '.' '.' const_exp OF Type
   35 procedure: PROCEDURE ID '(' functionVarA functionVarB . ')' $@4 contents END ID

    ')'  shift, and go to state 154
    ','  shift, and go to state 152


State 133

   18 array: VAR ID ':' ARRAY const_exp . '.' '.' const_exp OF Type

    '.'  shift, and go to state 155


State 134

   15 variable: VAR ID ':' Type ASSIGN . const_exp

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 156


State 135

   11 constant: CONST ID ':' Type ASSIGN . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 157
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 136

   85 function_invocation: ID '(' functionInputA functionInputB . ')'
   87 functionInputB: functionInputB . ',' expressions

    ')'  shift, and go to state 158
    ','  shift, and go to state 159


State 137

   67 expressions: ID '[' INT ']' .

    $default  reduce using rule 67 (expressions)


State 138

   48 block: BEG $@5 content END .

    $default  reduce using rule 48 (block)


State 139

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   96 loop: FOR ID ':' expressions . '.' '.' expressions $@9 contents END FOR

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83
    '.'         shift, and go to state 160


State 140

   98 loop: FOR DECREASING ID ':' . expressions '.' '.' expressions $@10 contents END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 161
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 141

   90 conditional: IF bool_expression THEN $@6 . contents ELSE content END IF

    $default  reduce using rule 37 (contents)

    contents  go to state 162


State 142

   92 conditional: IF bool_expression THEN $@7 . contents END IF

    $default  reduce using rule 37 (contents)

    contents  go to state 163


State 143

   94 loop: LOOP $@8 contents END . LOOP

    LOOP  shift, and go to state 164


State 144

   36 contents: contents content .

    $default  reduce using rule 36 (contents)


State 145

   28 functionVarA: ID ':' ARRAY . const_exp '.' '.' const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 165


State 146

   27 functionVarA: ID ':' Type .

    $default  reduce using rule 27 (functionVarA)


State 147

   18 array: VAR . ID ':' ARRAY const_exp '.' '.' const_exp OF Type

    ID  shift, and go to state 166


State 148

   24 function: FUNCTION ID '(' ')' ':' Types . $@1 contents END ID

    $default  reduce using rule 23 ($@1)

    $@1  go to state 167


State 149

   17 Types: array .

    $default  reduce using rule 17 (Types)


State 150

   16 Types: Type .

    $default  reduce using rule 16 (Types)


State 151

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' . ':' Types $@2 contents END ID

    ':'  shift, and go to state 168


State 152

   29 functionVarB: functionVarB ',' . ID ':' Type
   30             | functionVarB ',' . ID ':' ARRAY const_exp '.' '.' const_exp OF Type

    ID  shift, and go to state 169


State 153

   33 procedure: PROCEDURE ID '(' ')' $@3 contents . END ID
   36 contents: contents . content

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 170
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 154

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' . $@4 contents END ID

    $default  reduce using rule 34 ($@4)

    $@4  go to state 171


State 155

   18 array: VAR ID ':' ARRAY const_exp '.' . '.' const_exp OF Type

    '.'  shift, and go to state 172


State 156

   15 variable: VAR ID ':' Type ASSIGN const_exp .

    $default  reduce using rule 15 (variable)


State 157

   11 constant: CONST ID ':' Type ASSIGN expressions .
   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 11 (constant)]
    $default  reduce using rule 11 (constant)


State 158

   85 function_invocation: ID '(' functionInputA functionInputB ')' .

    $default  reduce using rule 85 (function_invocation)


State 159

   87 functionInputB: functionInputB ',' . expressions

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 173
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 160

   96 loop: FOR ID ':' expressions '.' . '.' expressions $@9 contents END FOR

    '.'  shift, and go to state 174


State 161

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   98 loop: FOR DECREASING ID ':' expressions . '.' '.' expressions $@10 contents END FOR

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83
    '.'         shift, and go to state 175


State 162

   36 contents: contents . content
   90 conditional: IF bool_expression THEN $@6 contents . ELSE content END IF

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    ELSE         shift, and go to state 176
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 163

   36 contents: contents . content
   92 conditional: IF bool_expression THEN $@7 contents . END IF

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 177
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 164

   94 loop: LOOP $@8 contents END LOOP .

    $default  reduce using rule 94 (loop)


State 165

   28 functionVarA: ID ':' ARRAY const_exp . '.' '.' const_exp OF Type

    '.'  shift, and go to state 178


State 166

   18 array: VAR ID . ':' ARRAY const_exp '.' '.' const_exp OF Type

    ':'  shift, and go to state 179


State 167

   24 function: FUNCTION ID '(' ')' ':' Types $@1 . contents END ID

    $default  reduce using rule 37 (contents)

    contents  go to state 180


State 168

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' . Types $@2 contents END ID

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93
    VAR     shift, and go to state 147

    Types  go to state 181
    array  go to state 149
    Type   go to state 150


State 169

   29 functionVarB: functionVarB ',' ID . ':' Type
   30             | functionVarB ',' ID . ':' ARRAY const_exp '.' '.' const_exp OF Type

    ':'  shift, and go to state 182


State 170

   33 procedure: PROCEDURE ID '(' ')' $@3 contents END . ID

    ID  shift, and go to state 183


State 171

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' $@4 . contents END ID

    $default  reduce using rule 37 (contents)

    contents  go to state 184


State 172

   18 array: VAR ID ':' ARRAY const_exp '.' '.' . const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 185


State 173

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   87 functionInputB: functionInputB ',' expressions .

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    $default  reduce using rule 87 (functionInputB)


State 174

   96 loop: FOR ID ':' expressions '.' '.' . expressions $@9 contents END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 186
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 175

   98 loop: FOR DECREASING ID ':' expressions '.' . '.' expressions $@10 contents END FOR

    '.'  shift, and go to state 187


State 176

   90 conditional: IF bool_expression THEN $@6 contents ELSE . content END IF

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 188
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 177

   92 conditional: IF bool_expression THEN $@7 contents END . IF

    IF  shift, and go to state 189


State 178

   28 functionVarA: ID ':' ARRAY const_exp '.' . '.' const_exp OF Type

    '.'  shift, and go to state 190


State 179

   18 array: VAR ID ':' . ARRAY const_exp '.' '.' const_exp OF Type

    ARRAY  shift, and go to state 94


State 180

   24 function: FUNCTION ID '(' ')' ':' Types $@1 contents . END ID
   36 contents: contents . content

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 191
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 181

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types . $@2 contents END ID

    $default  reduce using rule 25 ($@2)

    $@2  go to state 192


State 182

   29 functionVarB: functionVarB ',' ID ':' . Type
   30             | functionVarB ',' ID ':' . ARRAY const_exp '.' '.' const_exp OF Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93
    ARRAY   shift, and go to state 193

    Type  go to state 194


State 183

   33 procedure: PROCEDURE ID '(' ')' $@3 contents END ID .

    $default  reduce using rule 33 (procedure)


State 184

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' $@4 contents . END ID
   36 contents: contents . content

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 195
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 185

   18 array: VAR ID ':' ARRAY const_exp '.' '.' const_exp . OF Type

    OF  shift, and go to state 196


State 186

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   96 loop: FOR ID ':' expressions '.' '.' expressions . $@9 contents END FOR

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 95 ($@9)]
    $default  reduce using rule 95 ($@9)

    $@9  go to state 197


State 187

   98 loop: FOR DECREASING ID ':' expressions '.' '.' . expressions $@10 contents END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 60
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    expressions          go to state 198
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44


State 188

   90 conditional: IF bool_expression THEN $@6 contents ELSE content . END IF

    END  shift, and go to state 199


State 189

   92 conditional: IF bool_expression THEN $@7 contents END IF .

    $default  reduce using rule 92 (conditional)


State 190

   28 functionVarA: ID ':' ARRAY const_exp '.' '.' . const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 200


State 191

   24 function: FUNCTION ID '(' ')' ':' Types $@1 contents END . ID

    ID  shift, and go to state 201


State 192

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types $@2 . contents END ID

    $default  reduce using rule 37 (contents)

    contents  go to state 202


State 193

   30 functionVarB: functionVarB ',' ID ':' ARRAY . const_exp '.' '.' const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 203


State 194

   29 functionVarB: functionVarB ',' ID ':' Type .

    $default  reduce using rule 29 (functionVarB)


State 195

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' $@4 contents END . ID

    ID  shift, and go to state 204


State 196

   18 array: VAR ID ':' ARRAY const_exp '.' '.' const_exp OF . Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93

    Type  go to state 205


State 197

   96 loop: FOR ID ':' expressions '.' '.' expressions $@9 . contents END FOR

    $default  reduce using rule 37 (contents)

    contents  go to state 206


State 198

   59 expressions: expressions . '*' expressions
   60            | expressions . '/' expressions
   61            | expressions . MOD expressions
   62            | expressions . '+' expressions
   63            | expressions . '-' expressions
   75 bool_expression: expressions . '<' expressions
   76                | expressions . LESS_EQUAL expressions
   77                | expressions . '=' expressions
   78                | expressions . MORE_EQUAL expressions
   79                | expressions . '>' expressions
   80                | expressions . NOT_EQUAL expressions
   82                | expressions . AND expressions
   83                | expressions . OR expressions
   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions . $@10 contents END FOR

    MOD         shift, and go to state 71
    LESS_EQUAL  shift, and go to state 72
    MORE_EQUAL  shift, and go to state 73
    NOT_EQUAL   shift, and go to state 74
    AND         shift, and go to state 75
    OR          shift, and go to state 76
    '<'         shift, and go to state 77
    '='         shift, and go to state 78
    '>'         shift, and go to state 79
    '+'         shift, and go to state 80
    '-'         shift, and go to state 81
    '*'         shift, and go to state 82
    '/'         shift, and go to state 83

    '-'       [reduce using rule 97 ($@10)]
    $default  reduce using rule 97 ($@10)

    $@10  go to state 207


State 199

   90 conditional: IF bool_expression THEN $@6 contents ELSE content END . IF

    IF  shift, and go to state 208


State 200

   28 functionVarA: ID ':' ARRAY const_exp '.' '.' const_exp . OF Type

    OF  shift, and go to state 209


State 201

   24 function: FUNCTION ID '(' ')' ':' Types $@1 contents END ID .

    $default  reduce using rule 24 (function)


State 202

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types $@2 contents . END ID
   36 contents: contents . content

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 210
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 203

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp . '.' '.' const_exp OF Type

    '.'  shift, and go to state 211


State 204

   35 procedure: PROCEDURE ID '(' functionVarA functionVarB ')' $@4 contents END ID .

    $default  reduce using rule 35 (procedure)


State 205

   18 array: VAR ID ':' ARRAY const_exp '.' '.' const_exp OF Type .

    $default  reduce using rule 18 (array)


State 206

   36 contents: contents . content
   96 loop: FOR ID ':' expressions '.' '.' expressions $@9 contents . END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 212
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 207

   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions $@10 . contents END FOR

    $default  reduce using rule 37 (contents)

    contents  go to state 213


State 208

   90 conditional: IF bool_expression THEN $@6 contents ELSE content END IF .

    $default  reduce using rule 90 (conditional)


State 209

   28 functionVarA: ID ':' ARRAY const_exp '.' '.' const_exp OF . Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93

    Type  go to state 214


State 210

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types $@2 contents END . ID

    ID  shift, and go to state 215


State 211

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp '.' . '.' const_exp OF Type

    '.'  shift, and go to state 216


State 212

   96 loop: FOR ID ':' expressions '.' '.' expressions $@9 contents END . FOR

    FOR  shift, and go to state 217


State 213

   36 contents: contents . content
   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions $@10 contents . END FOR

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23
    ID           shift, and go to state 24
    BEG          shift, and go to state 25
    END          shift, and go to state 218
    EXIT         shift, and go to state 26
    FOR          shift, and go to state 27
    GET          shift, and go to state 28
    IF           shift, and go to state 29
    LOOP         shift, and go to state 30
    PUT          shift, and go to state 31
    RESULT       shift, and go to state 32
    RETURN       shift, and go to state 33
    SKIP         shift, and go to state 34
    VAR          shift, and go to state 6
    CONST        shift, and go to state 7
    NOT          shift, and go to state 35
    '-'          shift, and go to state 36
    '('          shift, and go to state 37

    constant             go to state 103
    variable             go to state 104
    array                go to state 105
    content              go to state 144
    statment             go to state 107
    block                go to state 39
    simple               go to state 40
    expressions          go to state 41
    const_exp            go to state 42
    bool_expression      go to state 43
    function_invocation  go to state 44
    conditional          go to state 45
    loop                 go to state 46


State 214

   28 functionVarA: ID ':' ARRAY const_exp '.' '.' const_exp OF Type .

    $default  reduce using rule 28 (functionVarA)


State 215

   26 function: FUNCTION ID '(' functionVarA functionVarB ')' ':' Types $@2 contents END ID .

    $default  reduce using rule 26 (function)


State 216

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp '.' '.' . const_exp OF Type

    TRUE         shift, and go to state 19
    FALSE        shift, and go to state 20
    INT_NUMBER   shift, and go to state 21
    REAL_NUMBER  shift, and go to state 22
    STR          shift, and go to state 23

    const_exp  go to state 219


State 217

   96 loop: FOR ID ':' expressions '.' '.' expressions $@9 contents END FOR .

    $default  reduce using rule 96 (loop)


State 218

   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions $@10 contents END . FOR

    FOR  shift, and go to state 220


State 219

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp '.' '.' const_exp . OF Type

    OF  shift, and go to state 221


State 220

   98 loop: FOR DECREASING ID ':' expressions '.' '.' expressions $@10 contents END FOR .

    $default  reduce using rule 98 (loop)


State 221

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp '.' '.' const_exp OF . Type

    REAL    shift, and go to state 90
    INT     shift, and go to state 91
    STRING  shift, and go to state 92
    BOOL    shift, and go to state 93

    Type  go to state 222


State 222

   30 functionVarB: functionVarB ',' ID ':' ARRAY const_exp '.' '.' const_exp OF Type .

    $default  reduce using rule 30 (functionVarB)
